{"version":3,"sources":["Html5QrcodePlugin.jsx","ResultContainerPlugin.jsx","HowToUse.jsx","components/Header.js","ResultDrawer.tsx","App.js","reportWebVitals.js","index.js"],"names":["qrcodeRegionId","Html5QrcodePlugin","id","this","html5QrcodeScanner","clear","catch","error","console","config","props","fps","qrbox","aspectRatio","undefined","disableFlip","createConfig","verbose","qrCodeSuccessCallback","Html5QrcodeScanner","render","qrCodeErrorCallback","React","Component","filterResults","results","filteredResults","i","length","decodedText","push","ResultContainerTable","data","className","map","result","log","format","formatName","Header","title","Toolbar","sx","borderBottom","borderColor","Typography","component","variant","color","align","noWrap","flex","Root","styled","theme","height","backgroundColor","palette","mode","grey","background","default","StyledBox","Box","Puller","width","borderRadius","position","top","left","SwipeableEdgeDrawer","window","open","setOpen","toggleDrawer","newOpen","container","document","body","CssBaseline","styles","overflow","SwipeableDrawer","anchor","onClose","onOpen","swipeAreaWidth","disableSwipeToOpen","ModalProps","keepMounted","borderTopLeftRadius","borderTopRightRadius","visibility","right","p","px","pb","List","index","ListItem","disablePadding","ListItemButton","ListItemText","primary","App","state","decodedResults","onNewScanResult","bind","decodedResult","setState","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85437752.chunk.js","sourcesContent":["import { Html5QrcodeScanner } from \"html5-qrcode\";\nimport React from 'react';\n\nconst qrcodeRegionId = \"html5qr-code-full-region\";\n\nclass Html5QrcodePlugin extends React.Component {\n    render() {\n        return <div id={qrcodeRegionId} />;\n    }\n\n    componentWillUnmount() {\n        // TODO(mebjas): See if there is a better way to handle\n        //  promise in `componentWillUnmount`.\n        this.html5QrcodeScanner.clear().catch(error => {\n            console.error(\"Failed to clear html5QrcodeScanner. \", error);\n        });\n    }\n\n    componentDidMount() {\n        // Creates the configuration object for Html5QrcodeScanner.\n        function createConfig(props) {\n            var config = {};\n            if (props.fps) {\n            config.fps = props.fps;\n            }\n            if (props.qrbox) {\n            config.qrbox = props.qrbox;\n            }\n            if (props.aspectRatio) {\n            config.aspectRatio = props.aspectRatio;\n            }\n            if (props.disableFlip !== undefined) {\n            config.disableFlip = props.disableFlip;\n            }\n            return config;\n        }\n\n        var config = createConfig(this.props);\n        var verbose = this.props.verbose === true;\n\n        // Suceess callback is required.\n        if (!(this.props.qrCodeSuccessCallback )) {\n            throw \"qrCodeSuccessCallback is required callback.\";\n        }\n\n        this.html5QrcodeScanner = new Html5QrcodeScanner(\n            qrcodeRegionId, config, verbose);\n        this.html5QrcodeScanner.render(\n            this.props.qrCodeSuccessCallback,\n            this.props.qrCodeErrorCallback);\n    }\n};\n\nexport default Html5QrcodePlugin;\n","import React from 'react';\n\nfunction filterResults(results) {\n    let filteredResults = [];\n    for (var i = 0; i < results.length; ++i) {\n        if (i === 0) {\n            filteredResults.push(results[i]);\n            continue;\n        }\n\n        if (results[i].decodedText !== results[i-1].decodedText) {\n            filteredResults.push(results[i]);\n        }\n    }\n    return filteredResults;\n}\n\nclass ResultContainerTable extends React.Component {\n    render() {\n        var results = filterResults(this.props.data);\n        return (\n            <table className={'Qrcode-result-table'}>\n                <thead>\n                    <tr>\n                        <td>#</td>\n                        <td>Decoded Text</td>\n                        <td>Format</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        results.map((result, i) => {\n                            console.log(result);\n                            return (<tr key={i}>\n                                <td>{i}</td>\n                                <td>{result.decodedText}</td>\n                                <td>{result.result.format.formatName}</td>\n                            </tr>);\n                        })\n                    }\n                </tbody>\n            </table>\n        );\n    }\n}\n\nclass ResultContainerPlugin extends React.Component {\n    render() { \n        let results = filterResults(this.props.results);\n        return (<div className='Result-container'>\n                <div className='Result-header'>Scanned results ({results.length})</div>\n                <div className='Result-section'>\n                    <ResultContainerTable data={this.props.results} />\n                </div>\n            </div>);\n    }\n}\n\nexport default ResultContainerPlugin;","import React from 'react';\n\nclass HowToUse extends React.Component {\n    render() {\n        return (<div className='App-info-section'>\n        <h3>How to use?</h3>\n        <div>\n          Check out&nbsp;\n          <a href=\"https://github.com/scanapp-org/html5-qrcode-react\">\n          scanapp-org/html5-qrcode-react\n          </a>&nbsp;\n          on Github for reference.\n          <br />\n          <br />\n          Built using&nbsp;\n          <a href=\"https://github.com/mebjas/html5-qrcode\">\n          mebjas/html5-qrcode\n          </a>.\n          <br />\n          <br />\n          Free QR code scanner and barcode scanner at <a href=\"https://scanapp.org\">scanapp.org</a>.\n        </div>\n      </div>);\n    }\n}\n\nexport default HowToUse;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nfunction Header(props) {\n  const { title } = props;\n\n  return (\n    <React.Fragment>\n      <Toolbar sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          sx={{ flex: 1 }}\n        >\n          {title}\n        </Typography>\n\n        \n      </Toolbar>\n      \n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;","import * as React from 'react';\nimport { Global } from '@emotion/react';\nimport { styled } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { grey } from '@mui/material/colors';\nimport Box from '@mui/material/Box';\nimport Skeleton from '@mui/material/Skeleton';\nimport Typography from '@mui/material/Typography';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nconst drawerBleeding = 56;\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n  results: any[];\n}\n\nconst Root = styled('div')(({ theme }) => ({\n  height: '100%',\n  backgroundColor:\n    theme.palette.mode === 'light' ? grey[100] : theme.palette.background.default,\n}));\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'light' ? '#fff' : grey[800],\n}));\n\nconst Puller = styled(Box)(({ theme }) => ({\n  width: 30,\n  height: 6,\n  backgroundColor: theme.palette.mode === 'light' ? grey[300] : grey[900],\n  borderRadius: 3,\n  position: 'absolute',\n  top: 8,\n  left: 'calc(50% - 15px)',\n}));\n\nexport default function SwipeableEdgeDrawer(props: Props) {\n  const { window, results } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = (newOpen: boolean) => () => {\n    setOpen(newOpen);\n  };\n\n  // This is used only for the example\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Root>\n      <CssBaseline />\n      <Global\n        styles={{\n          '.MuiDrawer-root > .MuiPaper-root': {\n            height: `calc(50% - ${drawerBleeding}px)`,\n            overflow: 'visible',\n          },\n        }}\n      />\n      <SwipeableDrawer\n        container={container}\n        anchor=\"bottom\"\n        open={open}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n        swipeAreaWidth={drawerBleeding}\n        disableSwipeToOpen={false}\n        ModalProps={{\n          keepMounted: true,\n        }}\n      >\n        <StyledBox\n          sx={{\n            position: 'absolute',\n            top: -drawerBleeding,\n            borderTopLeftRadius: 8,\n            borderTopRightRadius: 8,\n            visibility: 'visible',\n            right: 0,\n            left: 0,\n          }}\n        >\n          <Puller />\n          <Typography sx={{ p: 2, color: 'text.secondary' }}>{results.length} items</Typography>\n        </StyledBox>\n        <StyledBox\n          sx={{\n            px: 2,\n            pb: 2,\n            height: '100%',\n            overflow: 'auto',\n          }}\n        >\n          {/* <Skeleton variant=\"rectangular\" height=\"100%\" /> */}\n          <List>\n            {results.map((result, index) => (\n              <ListItem key={index} disablePadding>\n                <ListItemButton>\n                  <ListItemText primary={index} />\n                  <ListItemText primary={result.decodedText} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n        </StyledBox>\n      </SwipeableDrawer>\n    </Root>\n  );\n}","import './App.css';\n\nimport React from 'react';\nimport Html5QrcodePlugin from './Html5QrcodePlugin.jsx'\nimport ResultContainerPlugin from './ResultContainerPlugin.jsx'\nimport HowToUse from './HowToUse.jsx'\nimport Header from './components/Header';\nimport SwipeableEdgeDrawer from './ResultDrawer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      decodedResults: []\n    }\n\n    // This binding is necessary to make `this` work in the callback.\n    this.onNewScanResult = this.onNewScanResult.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header title='Pay!t' />\n        <section className=\"App-section\">\n          <br />\n          <br />\n          <br />\n          <Html5QrcodePlugin\n            fps={30}\n            qrbox={250}\n            disableFlip={false}\n            qrCodeSuccessCallback={this.onNewScanResult} />\n          {/* <ResultContainerPlugin results={this.state.decodedResults} /> */}\n        </section>\n        <SwipeableEdgeDrawer results={this.state.decodedResults} />\n      </div>\n    );\n  }\n\n  onNewScanResult(decodedText, decodedResult) {\n    console.log(\n      \"App [result]\", decodedResult);\n\n    // let decodedResults = this.state.decodedResults;\n    // decodedResults.push(decodedResult);\n    this.setState((state, props) => {\n      if (JSON.stringify(state.decodedResults[state.decodedResults.length-1]) != JSON.stringify(decodedResult)) {\n        state.decodedResults.push(decodedResult);\n        return state;\n      }\n    });\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}